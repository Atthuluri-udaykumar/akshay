import React, { useEffect, useState } from "react";
import { Autocomplete, CircularProgress, TextField } from "@mui/material";
import { IOption } from "../../../global/types";

export interface ISelectDropdownProps {
    value?: any | null;
    label?: string;
    loading?:boolean;
    disabled?: boolean;
    helperText?: string;
    placeholder?: string;
    options: any[];
    error?: boolean;
    required?: boolean;
    onChange: (value: any | null) => void;
    getOptionLabel: (option: any) => string;
    isOptionEqualToValue: (option:any, value:any) => boolean;
  }

const SingleSelectDropdown = (props:ISelectDropdownProps)=>{
const {options, value,label, loading,disabled,helperText,error,required, placeholder,getOptionLabel,isOptionEqualToValue, onChange} = props;
const [open, setOpen] = useState(false);

const closeDropdown = () =>{
    setOpen(false)
}
const openDropdown = () =>{
    setOpen(true)
}
const selectItem = (value)=>{
    closeDropdown();
    onChange(value)
}
return (
        <div onMouseLeave={closeDropdown} onBlur={closeDropdown} style={{ minWidth: 300, maxWidth: 300, margin: 20 }}>
            <Autocomplete
                disabled={disabled}
                options={options}
                value={value}
                getOptionLabel={getOptionLabel}
                isOptionEqualToValue={isOptionEqualToValue} //this function we use to suppress the warning generated by material
                onChange={(evt, value) => selectItem(value)}
                open={open}
                renderInput={(params) => (
                    <TextField
                        onClick={openDropdown}
                        onChange={openDropdown}
                        {...params}
                        label={label}
                        helperText={helperText}
                        margin="normal"
                        variant="standard"
                        placeholder={placeholder}
                        error={error}
                        required={required}
                        InputProps={{
                            ...params.InputProps,
                            endAdornment: (
                            <React.Fragment>
                                {loading ? (
                                <CircularProgress color="inherit" size={20} />
                                ) : null}
                                {params.InputProps.endAdornment}
                            </React.Fragment>
                            ),
                        }}
                    />
                )}
            />
        </div>
)

}

export default SingleSelectDropdown;